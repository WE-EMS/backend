name: deploy-main

on:
  push:
    branches:
      - main  # main 브랜치에 새로운 커밋이 올라왔을 때 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          printf "%s" "${EC2_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # 호스트 키 미리 등록 (StrictHostKeyChecking no 대신 안전)
          ssh-keyscan -H "${EC2_HOST}" >> ~/.ssh/known_hosts 2>/dev/null

          # SSH config 작성 (들여쓰기 없이 heredoc 종료)
          cat > ~/.ssh/config <<'EOF'
Host jogakdolbom
  HostName __EC2_HOST__
  User __EC2_USER__
  IdentityFile ~/.ssh/id_rsa
  StrictHostKeyChecking no
EOF

          # 변수 치환
          sed -i "s/__EC2_HOST__/${EC2_HOST}/" ~/.ssh/config
          sed -i "s/__EC2_USER__/${EC2_USER}/" ~/.ssh/config

        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy Workspace
        run: |
          ssh jogakdolbom 'sudo mkdir -p /opt/app && sudo chown ubuntu:ubuntu /opt/app'
          scp -r ./[!.]* jogakdolbom:/opt/app

      - name: Install dependencies
        run: |
          ssh jogakdolbom 'npm install --prefix /opt/app/'

      - name: Copy systemd service file
        run: |
          ssh jogakdolbom '
            echo "[Unit]
            Description=EMS Project
            After=network.target

            [Service]
            User=${USER}
            ExecStart=/usr/bin/npm run dev --prefix /opt/app/
            Restart=always

            [Install]
            WantedBy=multi-user.target" | sudo tee /etc/systemd/system/app.service
          '

      - name: Enable systemd service
        run: |
          ssh jogakdolbom 'sudo systemctl daemon-reload'
          ssh jogakdolbom 'sudo systemctl enable app'

      - name: Restart systemd service
        run: |
          ssh jogakdolbom 'sudo systemctl restart app